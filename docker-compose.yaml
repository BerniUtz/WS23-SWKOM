version: "3"

services:
  web:
    build: ./paperless-ngx-ui
    ports:
      - "80:80"
        
  api:
    build:
      dockerfile: ./SWKOM-paperless/Dockerfile
      context: .
      args:
        BUILD_CONFIG: Release #Debug
    depends_on:
      - postgres
      - rabbitmq
      - minio
      - elasticsearch
    ports:
      - "8000:80"

    
  
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: paperless
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    ports:
      - "15672:15672" # management UI
      - "5672:5672" # AMQP protocol
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 3
        
  ocr_worker:
    build:
      dockerfile: ./SWKOM-paperless.OCRWorker/Dockerfile
      context: .
      args:
        BUILD_CONFIG: Release #Debug
    depends_on:
      - rabbitmq
      - minio
    environment:
      - ENVIRONMENT=docker
    
  
  minio:
    image: minio/minio
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000" # s3 server
      - "9001:9001" # minio web UI
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 30s
      timeout: 20s
      retries: 3
  
  minio-setup-s3-bucket:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 minio minio123 &&
      /usr/bin/mc mb minio/paperless
      "

  elasticsearch:
    image: elasticsearch:8.11.3
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/var/lib/elasticsearch/data
    environment:
      - ELASTIC_PASSWORD=password
      - discovery.type=single-node
      - xpack.security.enabled=false

volumes:
  postgres_data:
  rabbitmq_data:
  minio_data:
  elasticsearch_data: