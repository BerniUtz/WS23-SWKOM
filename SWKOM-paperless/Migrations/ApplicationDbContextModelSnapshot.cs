// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SWKOM_paperless.DAL;

#nullable disable

namespace Org.OpenAPITools.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SWKOM_paperless.BusinessLogic.Entities.Correspondent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("DocumentCount")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsInsensitive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastCorrespondence")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Match")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("MatchingAlgorithm")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Correspondents");
                });

            modelBuilder.Entity("SWKOM_paperless.BusinessLogic.Entities.DocTag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("DocumentCount")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsInboxTag")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInsensitive")
                        .HasColumnType("boolean");

                    b.Property<string>("Match")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("MatchingAlgorithm")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DocTags");
                });

            modelBuilder.Entity("SWKOM_paperless.BusinessLogic.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Correspondent")
                        .HasColumnType("integer");

                    b.Property<int?>("DocumentType")
                        .HasColumnType("integer");

                    b.Property<int?>("StoragePath")
                        .HasColumnType("integer");

                    b.Property<List<int>>("Tags")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("SWKOM_paperless.BusinessLogic.Entities.DocumentType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("DocumentCount")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsInsensitive")
                        .HasColumnType("boolean");

                    b.Property<string>("Match")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("MatchingAlgorithm")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("SWKOM_paperless.BusinessLogic.Entities.NewCorrespondent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("DocumentCount")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsInsensitive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastCorrespondence")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Match")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("MatchingAlgorithm")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NewCorrespondents");
                });

            modelBuilder.Entity("SWKOM_paperless.BusinessLogic.Entities.NewDocumentType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsInsensitive")
                        .HasColumnType("boolean");

                    b.Property<string>("Match")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("MatchingAlgorithm")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NewDocumentTypes");
                });

            modelBuilder.Entity("SWKOM_paperless.BusinessLogic.Entities.NewTag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsInboxTag")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInsensitive")
                        .HasColumnType("boolean");

                    b.Property<string>("Match")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("MatchingAlgorithm")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NewTags");
                });

            modelBuilder.Entity("SWKOM_paperless.BusinessLogic.Entities.UserInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
